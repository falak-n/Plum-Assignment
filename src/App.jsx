

import React, { useState } from 'react'
import TopicSelect from './screens/TopicSelect.jsx'
import Quiz from './screens/Quiz.jsx'
import Results from './screens/Results.jsx'

export default function App() {
  // Which screen are we on: 'topic', 'quiz', or 'results'
  const [stage, setStage] = useState('topic')

  // The topic the user selected
  const [topic, setTopic] = useState(null)

  // Questions generated by AI for this quiz
  const [questions, setQuestions] = useState([])

  // User's answers: array of { questionIndex, selectedId, isCorrect }
  const [answers, setAnswers] = useState([])

  // Final score after finishing the quiz
  const [score, setScore] = useState(0)

  // Reset everything and go back to topic selection
  const reset = () => {
    setStage('topic')
    setTopic(null)
    setQuestions([])
    setAnswers([])
    setScore(0)
  }

  // Start the quiz after topic selection
  const startQuiz = (selectedTopic, generatedQuestions) => {
    setTopic(selectedTopic)
    setQuestions(generatedQuestions)
    setStage('quiz')
  }

  // Finish the quiz and show results
  const finishQuiz = (finalScore, collectedAnswers) => {
    setScore(finalScore)
    setAnswers(collectedAnswers)
    setStage('results')
  }

  return (
    <div className="container">
      {/* Show topic selection screen */}
      {stage === 'topic' && <TopicSelect onStart={startQuiz} />}

      {/* Show the quiz screen */}
      {stage === 'quiz' && (
        <Quiz
          topic={topic}
          questions={questions}
          onFinish={finishQuiz}
          onQuit={reset} // user can quit anytime
        />
      )}

      {/* Show results screen */}
      {stage === 'results' && (
        <Results
          topic={topic}
          questions={questions}
          answers={answers}
          score={score}
          onRestart={reset} // restart the app
        />
      )}
    </div>
  )
}
